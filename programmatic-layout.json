{"name":"Programmatic-Layout Crash Course","lessons":[{"uid":"programmatic-layout-part-1","name":"Programmatic Layout: Part 1","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["iosexpert"],"isAvailable":true},"description":"This video introduces the two approaches to UI-building with UIKit, Interface Builder and programmatic layout. But wait, there's more! This video also demonstrates most of the process for converting an app from Interface Builder to programmatic layout.\n","video":{"vimeoId":"892451476","duration":20,"annotations":[],"instructor":"Josh Adams","thumbnail":""},"questions":[],"references":[],"codeExample":null,"links":[{"name":"Programmatic Layout Starter Project","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\n      This is the starter project for the programmatic-layout crash course.\n    \u003c/p\u003e\n\u003c/div\u003e","url":"https://github.com/algoexpert-io/iOSExpert/tree/master/programmatic-layout/CoolSymbols-starter","kinds":[]}],"preReqs":[],"keyTerms":[{"name":"Grok","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  Coined by Robert A. Heinlein, this word means, in the software-development context, to understand a snippet of code, codebase, or coding practice.\n\u003c/p\u003e\n\u003c/div\u003e","url":"https://en.wikipedia.org/wiki/Stranger_in_a_Strange_Land","kinds":[]},{"name":"Programmatic Layout","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A suite of practices for building UIKit user interfaces using code only, not using Interface Builder.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Interface Builder","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  Apple's what-you-see-is-what-you-get editor for UIKit user interfaces.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"XIB","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  Pronounced \"zib\", a file stored using an XML-style format, readable by Interface Builder, for representing individual views or view controllers.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Storyboard","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A file stored using an XML-style format, readable by Interface Builder, for representing multiple view controllers and connections among them.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"SF Symbols","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A suite of thousands of professional-grade icons that Apple provides for use in apps on its platforms.\n\u003c/p\u003e\n\u003c/div\u003e","url":"https://developer.apple.com/sf-symbols/","kinds":[]},{"name":"Info.plist","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A file that contains app configuration, for example the name of the storyboard, if any.\n\u003c/p\u003e\n\u003c/div\u003e","url":"https://developer.apple.com/documentation/bundleresources/information_property_list","kinds":[]},{"name":"translatesAutoresizingMaskIntoConstraints","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A property of UIView subclasses that must be set to false in order for programmatically created constraints to work on them.\n\u003c/p\u003e\n\u003c/div\u003e","url":"https://developer.apple.com/documentation/uikit/uiview/1622572-translatesautoresizingmaskintoco","kinds":["api"]},{"name":"NSLayoutConstraint","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  The API used to create Auto Layout constraints programmatically. If not a constant height or width, a constraint is defined in relation to the anchor of another constraint, in particular a height, width, leading, trailing, top, bottom, centerX, or centerY anchor.\n\u003c/p\u003e\n\u003c/div\u003e","url":"https://developer.apple.com/documentation/uikit/nslayoutconstraint","kinds":["api"]},{"name":"Standard Spacing","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  The default or \"standard\" spacing between elements in UIKit apps. Defined implicitly or explicitly as eight points.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Immediately Invoked Closure Expression","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A way of defining a property or variable as a closure that runs immediately. Often used to defining user-interface elements in programmatic-layout apps.\n\u003c/p\u003e\n\u003c/div\u003e","url":"https://stackoverflow.com/a/31899937","kinds":[]}],"section":"","hasCodeExample":false},{"uid":"programmatic-layout-part-2","name":"Programmatic Layout: Part 2","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["iosexpert"],"isAvailable":true},"description":"This video shows how to make programmatic-layout code shine and provides the viewer an opportunity to practice programmatic layout.\n","video":{"vimeoId":"892455708","duration":19,"annotations":[],"instructor":"Josh Adams","thumbnail":""},"questions":[],"references":[],"codeExample":null,"links":[{"name":"Programmatic Layout Completed Project","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  This is the completed project for the programmatic-layout crash course.\n\u003c/p\u003e\n\u003c/div\u003e","url":"https://github.com/algoexpert-io/iOSExpert/tree/master/programmatic-layout/CoolSymbols-final","kinds":[]},{"name":"Programmatic Layout Completed Bonus Project","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  This is the completed bonus project for the programmatic-layout crash course.\n\u003c/p\u003e\n\u003c/div\u003e","url":"https://github.com/algoexpert-io/iOSExpert/tree/master/programmatic-layout/ProgrammaticLayoutBonus","kinds":[]}],"preReqs":[],"keyTerms":[{"name":"CodingKey/CodingKeys","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A technique for decoding JSON into model properties whose names are not necessarily identical to key names in the JSON.\n\u003c/p\u003e\n\u003c/div\u003e","url":"https://developer.apple.com/documentation/foundation/archives_and_serialization/encoding_and_decoding_custom_types","kinds":["api"]}],"section":"","hasCodeExample":false}]}
