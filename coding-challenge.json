{"name":"Coding-Challenge Model Solutions","lessons":[{"uid":"beginning-the-coding-challenge","name":"Beginning the Coding Challenge","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":true,"isFreeForStudents":false,"productRequired":[],"isAvailable":true},"description":"This video introduces a model take-home iOS-developer coding challenge and describes setup of a solution app, KatFancy/CatFancy. Topics include SwiftLint and the models, networking layer, and app icon.\n","video":{"vimeoId":"892099042","duration":18,"annotations":[],"instructor":"Josh Adams","thumbnail":""},"questions":[],"references":[],"codeExample":null,"links":[{"name":"Completed UIKit Starter Project","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\n      This is the completed UKit project from the intro to coding challenges.\n    \u003c/p\u003e\n\u003c/div\u003e","url":"https://github.com/algoexpert-io/iOSExpert/tree/master/beginning-solution/CatFancy-final","kinds":[]},{"name":"Completed SwiftUI Starter Project","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\n      This is the completed SwiftUI project from the intro to coding challenges.\n    \u003c/p\u003e\n\u003c/div\u003e","url":"https://github.com/algoexpert-io/iOSExpert/tree/master/beginning-solution/KatFancy-final","kinds":[]},{"name":"JSON Formatter","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\n      This is a free JSON formatter.\n    \u003c/p\u003e\n\u003c/div\u003e","url":"https://jsonformatter.org/","kinds":[]},{"name":"SwiftLint","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\n      This is \"[a] tool to enforce Swift style and conventions, â€¦ enforc[ing] the style guide rules that are generally accepted by the Swift community.\"\n    \u003c/p\u003e\n\u003c/div\u003e","url":"https://github.com/realm/SwiftLint","kinds":[]}],"preReqs":[],"keyTerms":[{"name":"JSON","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A JavaScript-inspired protocol for exchanging data, for example between servers and clients. Can contain arrays, keys, and values.\n\u003c/p\u003e\n\u003c/div\u003e","url":"https://www.json.org/json-en.html","kinds":[]},{"name":"Decodable","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  Objects that conform to Decodable can be initialized by the Swift runtime based on, for example, the contents of a JSON file, eliminating much boilerplate.\n\u003c/p\u003e\n\u003c/div\u003e","url":"https://developer.apple.com/documentation/swift/decodable","kinds":["api"]},{"name":"JSONDecoder","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  An API that transforms JSON into Decodable objects.\n\u003c/p\u003e\n\u003c/div\u003e","url":"https://developer.apple.com/documentation/foundation/jsondecoder","kinds":["api"]},{"name":"Snake Case","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A convention for naming symbols that involves using all lowercase letters and separating words with underscores, like_this. JSON keys typically use snake case.\n\u003c/p\u003e\n\u003c/div\u003e","url":"https://en.wikipedia.org/wiki/Snake_case","kinds":[]},{"name":"Camel Case","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A convention for naming symbols that involves lowercasing the first letter of the symbol, smooshing words together with no separator, and uppercasing each word after the first, likeThis. Most Swift symbols other than type names like Float use camel case.\n\u003c/p\u003e\n\u003c/div\u003e","url":"https://en.wikipedia.org/wiki/Camel_case","kinds":[]},{"name":"Model","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  An object that represents data in an application's problem domain, for example Symbol in the CoolSymbols app.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Async/Await","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A newer feature of Swift that allows asynchronous function calls to be treated by the caller as synchronous. That is, the line after an async call does not run until the async call finishes, but the caller need take no action to ensure that the line after the async call runs after the async call finishes. Use of async/await contrast with the previous approach of providing callback closures to asynchronous calls.\n\u003c/p\u003e\n\u003c/div\u003e","url":"https://www.hackingwithswift.com/swift/5.5/async-await","kinds":[]},{"name":"URLSession","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  An API for fetching data from endpoints. Recently gained an async/await overlay.\n\u003c/p\u003e\n\u003c/div\u003e","url":"https://developer.apple.com/documentation/foundation/urlsession","kinds":["api"]},{"name":"Networking Layer","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  Code that, for example, fetches JSON from an endpoint and turns that data into model objects.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"building-the-model-uikit-solution-part-1","name":"Building the Model UIKit Solution: Part 1","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["iosexpert"],"isAvailable":true},"description":"This video describes the design of the model UIKit solution and most of the UI implementation.\n","video":{"vimeoId":"892119824","duration":16,"annotations":[],"instructor":"Josh Adams","thumbnail":""},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"DeleSource","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  An object that conforms to UITableViewDelegate and UITableViewDataSource or its UICollectionView equivalents, removing this responsibility from UIViewController; promotes separation of concerns.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"building-the-model-uikit-solution-part-2","name":"Building the Model UIKit Solution: Part 2","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["iosexpert"],"isAvailable":true},"description":"This video demonstrates sorting, image caching, and detail display in the model UIKit solution.\n","video":{"vimeoId":"892114176","duration":14,"annotations":[],"instructor":"Josh Adams","thumbnail":""},"questions":[],"references":[],"codeExample":null,"links":[{"name":"Completed UIKit Building Project","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\n      This is the completed UKit project from the series of videos about building the model UIKit solution.\n    \u003c/p\u003e\n\u003c/div\u003e","url":"https://github.com/algoexpert-io/iOSExpert/tree/master/building-solution/CatFancy-final","kinds":[]}],"preReqs":[],"keyTerms":[],"section":"","hasCodeExample":false},{"uid":"refining-the-model-uikit-solution-part-1","name":"Refining the Model UIKit Solution: Part 1","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["iosexpert"],"isAvailable":true},"description":"This video describes shortcomings of the original UIKit model solution and introduces dependeffects whose management will allow these shortcomings to be addressed.\n","video":{"vimeoId":"892352205","duration":21,"annotations":[],"instructor":"Josh Adams","thumbnail":""},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"URLProtocol","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A class that, when subclassed, allows URLSession to be stubbed.\n\u003c/p\u003e\n\u003c/div\u003e","url":"https://developer.apple.com/documentation/foundation/urlprotocol","kinds":["api"]}],"section":"","hasCodeExample":false},{"uid":"refining-the-model-uikit-solution-part-2","name":"Refining the Model UIKit Solution: Part 2","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["iosexpert"],"isAvailable":true},"description":"This video describes access to dependeffects in the model UIKit solution, unveils handy new settings, and demonstrates preparation for unit testing.\n","video":{"vimeoId":"892387679","duration":25,"annotations":[],"instructor":"Josh Adams","thumbnail":""},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"Coordinator","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  An object that is responsible for navigation within and out of an app.\n\u003c/p\u003e\n\u003c/div\u003e","url":"https://khanlou.com/2015/01/the-coordinator/","kinds":[]}],"section":"","hasCodeExample":false},{"uid":"refining-the-model-uikit-solution-part-3","name":"Refining the Model UIKit Solution: Part 3","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["iosexpert"],"isAvailable":true},"description":"This video presents a comprehensive unit-test suite for the model UIKit solution.\n","video":{"vimeoId":"892378651","duration":25,"annotations":[],"instructor":"Josh Adams","thumbnail":""},"questions":[],"references":[],"codeExample":null,"links":[{"name":"Completed UIKit Refining Project","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\n      This is the completed UKit project from the series of videos about refining the model UIKit solution.\n    \u003c/p\u003e\n\u003c/div\u003e","url":"https://github.com/algoexpert-io/iOSExpert/tree/master/refining-solution/CatFancy-final","kinds":[]}],"preReqs":[],"keyTerms":[],"section":"","hasCodeExample":false},{"uid":"building-the-model-swiftui-solution-part-1","name":"Buiding the Model SwiftUI Solution: Part 1","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["iosexpert"],"isAvailable":true},"description":"This video describes the design of a model SwiftUI solution and the beginning of a UI implementation.\n","video":{"vimeoId":"892111498","duration":12,"annotations":[],"instructor":"Josh Adams","thumbnail":""},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[{"name":"View Model","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  In SwiftUI, an object that is responsible for getting data and managing state; use of view models reduces View complexity.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"@Observable","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A macro that causes property changes to be published to subscribed objects.\n\u003c/p\u003e\n\u003c/div\u003e","url":"https://developer.apple.com/documentation/swiftui/migrating-from-the-observable-object-protocol-to-the-observable-macro","kinds":["api"]}],"section":"","hasCodeExample":false},{"uid":"building-the-model-swiftui-solution-part-2","name":"Building the Model SwiftUI Solution: Part 2","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["iosexpert"],"isAvailable":true},"description":"This video demonstrates sorting, detail display, and error handling in the model SwiftUI solution.\n","video":{"vimeoId":"892113157","duration":11,"annotations":[],"instructor":"Josh Adams","thumbnail":""},"questions":[],"references":[],"codeExample":null,"links":[{"name":"Completed SwiftUI Building Project","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\n      This is the completed SwiftUI project from the series of videos about building the model SwiftUI solution.\n    \u003c/p\u003e\n\u003c/div\u003e","url":"https://github.com/algoexpert-io/iOSExpert/tree/master/building-solution/KatFancy-final","kinds":[]},{"name":"A Better AsyncImage with Cache in SwiftUI","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\n      In this video, Pedro Rojas enhanced AsyncImage with caching.\n    \u003c/p\u003e\n\u003c/div\u003e","url":"https://www.youtube.com/watch?v=KhGyiOk3Yzk","kinds":[]}],"preReqs":[],"keyTerms":[],"section":"","hasCodeExample":false},{"uid":"refining-the-model-swiftui-solution-part-1","name":"Refining the Model SwiftUI Solution: Part 1","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["iosexpert"],"isAvailable":true},"description":"This video describes shortcomings of the original SwiftUI model solution and introduces dependeffects whose management will allow these shortcomings to be addressed.\n","video":{"vimeoId":"892339896","duration":22,"annotations":[],"instructor":"Josh Adams","thumbnail":""},"questions":[],"references":[],"codeExample":null,"links":[],"preReqs":[],"keyTerms":[],"section":"","hasCodeExample":false},{"uid":"refining-the-model-swiftui-solution-part-2","name":"Refining the Model SwiftUI Solution: Part 2","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["iosexpert"],"isAvailable":true},"description":"This video describes access to dependeffects in the model SwiftUI solution, unveils handy new settings, and demonstrates image caching, SwiftUI previews, and preparation for unit testing.\n","video":{"vimeoId":"892343937","duration":25,"annotations":[],"instructor":"Josh Adams","thumbnail":""},"questions":[],"references":[],"codeExample":null,"links":[{"name":"A Better AsyncImage with Cache in SwiftUI","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\n      In this video, Pedro Rojas enhanced AsyncImage with caching.\n    \u003c/p\u003e\n\u003c/div\u003e","url":"https://www.youtube.com/watch?v=KhGyiOk3Yzk","kinds":[]},{"name":"Using Swiftâ€™s async/await to Build an Image Loader","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\n      In this article, Donny Wals showed how to use an actor to \"build[] an asynchronous image loader that has support for caching\".\n    \u003c/p\u003e\n\u003c/div\u003e","url":"https://www.donnywals.com/using-swifts-async-await-to-build-an-image-loader/","kinds":[]}],"preReqs":[],"keyTerms":[{"name":"#Preview","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n  A macro for SwiftUI previews; reduces boilerplate.\n\u003c/p\u003e\n\u003c/div\u003e","url":"https://www.avanderlee.com/xcode/preview-swiftui-uikit-appkit-views/","kinds":["api"]}],"section":"","hasCodeExample":false},{"uid":"refining-the-model-swiftui-solution-part-3","name":"Refining the Model SwiftUI Solution: Part 3","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["iosexpert"],"isAvailable":true},"description":"This video presents a decent unit-test suite for the model SwiftUI solution.\n","video":{"vimeoId":"892348236","duration":16,"annotations":[],"instructor":"Josh Adams","thumbnail":""},"questions":[],"references":[],"codeExample":null,"links":[{"name":"Completed SwiftUI Refining Project","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\n      This is the completed SwiftUI project from the series of videos about refining the model SwiftUI solution.\n    \u003c/p\u003e\n\u003c/div\u003e","url":"https://github.com/algoexpert-io/iOSExpert/tree/master/refining-solution/KatFancy-final","kinds":[]}],"preReqs":[],"keyTerms":[],"section":"","hasCodeExample":false},{"uid":"wrapping-up-the-coding-challenge","name":"Wrapping Up the Coding Challenge","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["iosexpert"],"isAvailable":true},"description":"This video wraps up the model solution with a readme and launch screen.\n","video":{"vimeoId":"892388460","duration":12,"annotations":[],"instructor":"Josh Adams","thumbnail":""},"questions":[],"references":[],"codeExample":null,"links":[{"name":"Completed UIKit Wrapped-Up Project","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\n      This is the completed UKit project from the video about wrapping up the UIKit coding challenge.\n    \u003c/p\u003e\n\u003c/div\u003e","url":"https://github.com/algoexpert-io/iOSExpert/tree/master/solution-wrap-up/CatFancy-final","kinds":[]},{"name":"Completed SwiftUI Wrapped-Up Project","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\n      This is the completed SwiftUI project from the video about wrapping up the SwiftUI coding challenge.\n    \u003c/p\u003e\n\u003c/div\u003e","url":"https://github.com/algoexpert-io/iOSExpert/tree/master/solution-wrap-up/KatFancy-final","kinds":[]}],"preReqs":[],"keyTerms":[],"section":"","hasCodeExample":false}]}
